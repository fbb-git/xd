#define EXTENSION ""
    // EXTENSION should be changed to ".exe" when compiling xd for 
    // Cygwin environments. Don't forget the initial dot (.)
    // See also README.CYGWIN

string BASE;

    // BASE=is the directory below which ALL xd files will be stored.

    // For an operational non-Debian installation, you probably must be
    // `root', and BASE "/usr" or BASE "/usr/local" is suggested (see
    // below). `BASE' itself is not used outside of this file, so feel free to
    // define BIN, SKEL, MAN and DOC (below) in any which way you like.

string BIN;
    // the directory in which xd will be stored

string SKEL;
    // SKEL is the directory below BASE in which the skeleton files will be
    // stored

string MAN;
    // MAN is the directory in which the manual page will be stored

string DOC;
    // DOC is the directory in which all other documentation will be stored

string COMPILER;
    // COMPILER specifies the compiler to use. xd is coined as
    // belonging to the Debian `unstable' distribution, which may use a
    // different version of the compiler you currently have in your
    // system. E.g., in july 2006 the Debian `testing' version of the compiler
    // was 4.0.4, but the `unstable' version's compiler was 4.1.2. By defining
    // COMPILER with a specific version (e.g., COMPILER=g++-4.1) that
    // particular version can be used. The distributed definition uses the
    // `default' compiler version.

//#define PROFILE "-pg"
    // Uncomment the above #define to construct a binary program that can be
    // used with the gprof profiler. When specified, no stripping is performed
    // at ./build program strip (see INSTALL)

void setLocations()
{
    BASE  = "/usr";
    BIN  = BASE + "/bin";
    SKEL = BASE + "/share/xd";
    MAN  = BASE + "/share/man/man1";    
    DOC  = BASE + "/share/doc/xd";

    COMPILER = "g++";
}

